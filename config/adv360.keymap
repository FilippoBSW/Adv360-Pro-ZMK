#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <75>;
        };

        layer: layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <75>;
            flavor = "hold-preferred";
        };

        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LCTRL>, <&sk LS(LCTRL)>;
        };

        alt_shift: alt_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LALT>, <&sk LS(LALT)>;
        };

        gui_shift: gui_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LGUI>, <&sk LS(LGUI)>;
        };

        caps_word2: caps_word2 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_WORD2";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;
        };
    };

    macros {
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2       &kp N3    &kp N4     &kp N5  &none                                                                      &mo 3      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0         &kp MINUS
&kp TAB    &kp Q      &kp W        &kp F     &kp P      &kp B   &none                                                                      &none      &kp J   &kp L   &kp U      &kp Y     &kp SEMICOLON  &kp BACKSLASH
&kp ESC    &kp A      &kp R        &kp S     &kp T      &kp G   &none               &ctrl_shift  &alt_shift       &alt_shift  &ctrl_shift  &none      &kp M   &kp N   &kp E      &kp I     &kp O          &kp SQT
&kp LSHFT  &kp Z      &kp X        &kp C     &kp D      &kp V                                    &gui_shift       &gui_shift                          &kp K   &kp H   &kp COMMA  &kp DOT   &kp FSLH       &kp LSHIFT
&mo 2      &kp GRAVE  &caps_word2  &kp LEFT  &kp RIGHT          &layer 1 BACKSPACE  &kp DEL      &key_repeat      &kp TAB     &kp ENTER    &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT       &mo 2
            >;
        };

        symbol {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans     &trans                                      &trans  &kp PIPE   &kp STAR   &kp LBRC   &kp RBRC  &trans         &trans
&trans  &trans     &kp LGUI  &kp LALT  &kp LCTRL  &trans     &trans                                      &trans  &kp AMPS   &kp UNDER  &kp LPAR   &kp RPAR  &kp COLON      &trans
&trans  &kp QMARK  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &trans  &trans  &trans      &trans  &trans  &trans  &kp CARET  &kp EQUAL  &kp MINUS  &kp PLUS  &kp EXCL       &trans
&trans  &trans     &trans    &trans    &trans     &trans                     &trans      &trans                  &kp TILDE  &kp DQT    &kp LT     &kp GT    &kp BACKSLASH  &trans
&trans  &trans     &trans    &trans    &trans                &trans  &trans  &trans      &trans  &trans  &trans             &trans     &trans     &trans    &trans         &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                      &trans  &kp F7  &kp F8                &kp F9            &kp F10               &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &none   &kp C_PREVIOUS        &kp C_PLAY_PAUSE  &kp C_NEXT            &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN     &kp K_MUTE        &kp C_VOLUME_UP       &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp C_BRIGHTNESS_DEC  &kp PRINTSCREEN   &kp C_BRIGHTNESS_INC  &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans                &trans            &trans                &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &out OUT_BLE  &out OUT_USB  &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
